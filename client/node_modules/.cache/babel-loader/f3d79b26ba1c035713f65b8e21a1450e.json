{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\StoryDetail\\\\StoryDetailOwner\\\\StoryDetailOwner.js\";\nimport React, { Component } from 'react';\nimport { Container, Divider, Icon, Button, Message } from 'semantic-ui-react';\nimport Events from '../Sections/Events/Events';\nimport AddEvent from '../Sections/AddEvent/AddEvent';\nimport Comments from '../Sections/Comments/Comments';\nimport Statistics from '../Sections/Statistics/Statistics';\nimport Description from '../Sections/Description/Description';\nimport { connect } from 'react-redux';\nimport { postFavorite, postUnfavorite } from '../../../actions/storyActions';\n\nvar StoryDetailOwner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StoryDetailOwner, _Component);\n\n  function StoryDetailOwner() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StoryDetailOwner);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoryDetailOwner)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      events: [],\n      comments: [],\n      favorites: 0,\n      views: 0,\n      favorited: false,\n      storyID: '',\n      //for adding a new event\n      title: '',\n      date: '',\n      description: ''\n    };\n    return _this;\n  }\n\n  _createClass(StoryDetailOwner, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        events: nextProps.story.events,\n        comments: nextProps.story.comments,\n        favorites: nextProps.story.favorites.length,\n        views: nextProps.story.views,\n        storyID: nextProps.story._id\n      });\n      this.findUserFavorite(nextProps.story.favorites);\n    }\n  }, {\n    key: \"findUserFavorite\",\n    value: function findUserFavorite(favorites) {\n      var auth = this.props.auth;\n\n      if (favorites.filter(function (favorite) {\n        return favorite.user === auth.user.id;\n      }).length > 0) {\n        this.setState({\n          favorited: true\n        });\n        return true;\n      } else {\n        this.setState({\n          favorited: false\n        });\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          events = _this$state.events,\n          comments = _this$state.comments,\n          favorites = _this$state.favorites,\n          views = _this$state.views,\n          favorited = _this$state.favorited,\n          storyID = _this$state.storyID;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.props.story && React.createElement(Message, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"You published this story on \", this.props.story.date), React.createElement(Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        style: {\n          color: 'white'\n        },\n        horizontal: true,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" Events (\", events.length, \")\"), React.createElement(Events, {\n        events: events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Statistics, {\n        views: views,\n        comments: comments.length,\n        favorites: favorites,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), !favorited ? React.createElement(Button, {\n        color: \"teal\",\n        onClick: function onClick() {\n          _this2.props.postFavorite(_this2.props.story._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" Favorite \") : React.createElement(Button, {\n        color: \"red\",\n        onClick: function onClick() {\n          _this2.props.postUnfavorite(_this2.props.story._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" Unfavorite \"), React.createElement(Divider, {\n        style: {\n          color: 'white'\n        },\n        horizontal: true,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" Add Event? \"), React.createElement(AddEvent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Button, {\n        fluid: true,\n        icon: \"cross\",\n        color: \"red\",\n        size: \"huge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \" Delete Story? \"), React.createElement(Divider, {\n        style: {\n          color: 'white'\n        },\n        horizontal: true,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" Comments (\", comments.length, \") \"), React.createElement(Comments, {\n        comments: comments,\n        storyID: storyID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StoryDetailOwner;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    story: state.stories.story,\n    isLoading: state.stories.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postFavorite: postFavorite,\n  postUnfavorite: postUnfavorite\n})(StoryDetailOwner);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\StoryDetail\\StoryDetailOwner\\StoryDetailOwner.js"],"names":["React","Component","Container","Divider","Icon","Button","Message","Events","AddEvent","Comments","Statistics","Description","connect","postFavorite","postUnfavorite","StoryDetailOwner","state","events","comments","favorites","views","favorited","storyID","title","date","description","nextProps","setState","story","length","_id","findUserFavorite","auth","props","filter","favorite","user","id","color","mapStateToProps","stories","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container,  Divider, Icon, Button, Message} from 'semantic-ui-react'\r\nimport Events from '../Sections/Events/Events';\r\nimport AddEvent from '../Sections/AddEvent/AddEvent';\r\nimport Comments from '../Sections/Comments/Comments';\r\nimport Statistics from '../Sections/Statistics/Statistics';\r\nimport Description from '../Sections/Description/Description';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { postFavorite, postUnfavorite } from '../../../actions/storyActions';\r\n\r\n\r\n\r\nclass StoryDetailOwner extends Component {\r\n\r\n  state={\r\n    events:[],\r\n    comments:[],\r\n    favorites:0,\r\n    views: 0,\r\n    favorited: false,\r\n    storyID:'',\r\n\r\n    //for adding a new event\r\n    title:'',\r\n    date: '',\r\n    description:'',\r\n\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n    this.setState({\r\n      events:nextProps.story.events,\r\n      comments: nextProps.story.comments,\r\n      favorites: nextProps.story.favorites.length,\r\n      views: nextProps.story.views,\r\n      storyID: nextProps.story._id,\r\n    });\r\n\r\n    this.findUserFavorite(nextProps.story.favorites);\r\n\r\n\r\n  }\r\n\r\n  findUserFavorite(favorites) {\r\n    const { auth } = this.props;\r\n\r\n    if (favorites.filter(favorite => favorite.user === auth.user.id).length > 0) {\r\n      this.setState({favorited:true});\r\n      return true;\r\n    } else {\r\n      this.setState({favorited:false});\r\n      return false;\r\n    }\r\n\r\n \r\n \r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const{events, comments, favorites, views, favorited, storyID} = this.state;\r\n\r\n    return (\r\n    <Container>\r\n      {this.props.story &&<Message color='teal'>You published this story on {this.props.story.date}</Message>\r\n      }\r\n\r\n      <Description/>\r\n\r\n\r\n<Divider style={{color:'white'}} horizontal color='white'> Events ({events.length})</Divider>\r\n        <Events events = {events}/>\r\n        <Statistics views = {views} comments = {comments.length} favorites = {favorites} />\r\n        <br/>\r\n        {!favorited?\r\n        <Button  color='teal' onClick={()=>{this.props.postFavorite(this.props.story._id)}}> Favorite </Button>\r\n        :\r\n        <Button color='red' onClick={()=>{this.props.postUnfavorite(this.props.story._id)}}> Unfavorite </Button>\r\n\r\n      }\r\n\r\n        <Divider style={{color:'white'}} horizontal color='white'> Add Event? </Divider>\r\n        <AddEvent/>\r\n        <br/><br/>\r\n        <Button fluid icon='cross' color='red' size='huge'> Delete Story? </Button>\r\n     \r\n\r\n        <Divider  style={{color:'white'}} horizontal color='white'> Comments ({comments.length}) </Divider>\r\n        <Comments comments = {comments} storyID = {storyID}/>\r\n\r\n\r\n\r\n    \r\n    </Container>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  story:  state.stories.story,\r\n  isLoading: state.stories.isLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {postFavorite, postUnfavorite})(StoryDetailOwner);\r\n"]},"metadata":{},"sourceType":"module"}