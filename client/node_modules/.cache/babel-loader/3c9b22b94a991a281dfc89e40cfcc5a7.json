{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\NewStory\\\\NewStory.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, Segment, Header, Button, Grid, Form, Icon, Label } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { getCategories, postStory } from '../../actions/storyActions';\nimport Navbar from '../Navbar/Navbar';\n\nvar NewStory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewStory, _Component);\n\n  function NewStory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewStory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewStory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      description: '',\n      activeItem: 'home',\n      categorySelected: '',\n      subcategorySelected: 'Please Choose A Category',\n      color: 'red'\n    };\n\n    _this.handleItemClick = function (e, _ref) {\n      var name = _ref.name;\n\n      _this.setState({\n        activeItem: name\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleCategorySelect = function (subcategory, category) {\n      _this.setState({\n        subcategorySelected: subcategory,\n        color: 'olive',\n        categorySelected: category\n      });\n    };\n\n    _this.onSubmit = function () {\n      var postData = {\n        title: _this.state.title,\n        description: _this.state.description,\n        category: _this.state.categorySelected,\n        subcategory: _this.state.subcategorySelected\n      };\n\n      _this.props.postStory(postData);\n\n      _this.props.history.push('/');\n    };\n\n    return _this;\n  }\n\n  _createClass(NewStory, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getCategories();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          activeItem = _this$state.activeItem,\n          subcategorySelected = _this$state.subcategorySelected,\n          color = _this$state.color,\n          title = _this$state.title,\n          description = _this$state.description;\n      return React.createElement(\"div\", {\n        style: {\n          height: '100vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        icon: true,\n        color: \"olive\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"lightbulb outline\",\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), \"Upload Your Story!\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        name: \"title\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Title\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.state.title,\n        maxLength: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Form.TextArea, {\n        fluid: true,\n        name: \"description\",\n        icon: \"mail\",\n        iconPosition: \"left\",\n        placeholder: \"Description\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.state.description,\n        maxLength: \"300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        text: \"Category\",\n        scrolling: true,\n        selection: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.props.categories ? this.props.categories.map(function (category) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(Dropdown.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, category.title), category.subcategories.map(function (subcategory) {\n          return React.createElement(Dropdown.Item, {\n            onClick: function onClick() {\n              return _this2.handleCategorySelect(subcategory, category.title);\n            },\n            text: subcategory,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        }), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }));\n      }) : null)), React.createElement(Label, {\n        color: color,\n        style: {\n          marginLeft: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, subcategorySelected)), React.createElement(Button, {\n        color: \"olive\",\n        fluid: true,\n        size: \"large\",\n        onClick: function onClick() {\n          return _this2.onSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return NewStory;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    categories: state.stories.categories,\n    story: state.stories.story\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCategories: getCategories,\n  postStory: postStory\n})(NewStory);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\NewStory\\NewStory.js"],"names":["React","Component","Dropdown","Segment","Header","Button","Grid","Form","Icon","Label","connect","getCategories","postStory","Navbar","NewStory","state","title","description","activeItem","categorySelected","subcategorySelected","color","handleItemClick","e","name","setState","handleChange","event","target","value","handleCategorySelect","subcategory","category","onSubmit","postData","props","history","push","height","maxWidth","handleSubmit","categories","map","subcategories","marginLeft","mapStateToProps","auth","stories","story"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {  Dropdown, Segment,Header,Button, Grid, Form, Icon, Label } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport { getCategories, postStory } from '../../actions/storyActions';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\nclass NewStory extends Component {\r\n  state = { \r\n    title:'',\r\n    description:'',\r\n    activeItem: 'home',\r\n    categorySelected:'',\r\n    subcategorySelected:'Please Choose A Category',\r\n    color:'red',\r\n}\r\n\r\n  handleItemClick = (e, { name }) => \r\n  \r\n\r\n  \r\n  {\r\n      this.setState({ activeItem: name });\r\n\r\n}\r\n    \r\nhandleChange = event =>{\r\n    this.setState({[event.target.name]:event.target.value});\r\n}\r\n  componentWillMount()\r\n  {\r\n    this.props.getCategories();\r\n\r\n  }\r\n\r\n  handleCategorySelect = (subcategory,category) =>{\r\n        this.setState({subcategorySelected:subcategory,color:'olive',categorySelected:category});\r\n      }\r\n    \r\n  onSubmit = () =>{\r\n      const postData = {\r\n          title:this.state.title,\r\n          description: this.state.description,\r\n          category: this.state.categorySelected,\r\n          subcategory: this.state.subcategorySelected,\r\n      }\r\n      this.props.postStory(postData);\r\n      this.props.history.push('/');\r\n\r\n      \r\n  }\r\n  render() {\r\n    const { activeItem, subcategorySelected, color, title,description } = this.state\r\n\r\n    return (\r\n        <div style={{height:'100vh'}}>        \r\n        <Navbar history={this.props.history}/> \r\n        <Grid textAlign = 'center' verticalAlign ='middle' className='app'>\r\n            <Grid.Column style = {{maxWidth:450}}>\r\n                <Header as='h2' icon color ='olive' textAlign = 'center'>\r\n                    <Icon name = 'lightbulb outline' color = 'olive'/>\r\n                    Upload Your Story!\r\n                </Header>\r\n                <Form onSubmit = {this.handleSubmit}>\r\n                    <Segment stacked >\r\n                        <Form.Input fluid name='title' icon='user' iconPosition='left' \r\n                        placeholder ='Title' onChange = {this.handleChange} type = 'text'\r\n                        value = {this.state.title}   maxLength=\"30\"\r\n                        />\r\n            \r\n                         <Form.TextArea fluid name='description' icon='mail' iconPosition='left' \r\n                        placeholder ='Description' onChange = {this.handleChange} type = 'text'\r\n                        value = {this.state.description} maxLength=\"300\"/>\r\n\r\n                        \r\n                        \r\n                        <Form.Input ><Dropdown text='Category' scrolling selection>\r\n                        \r\n                        <Dropdown.Menu >\r\n                        {\r\n                            this.props.categories? \r\n                            \r\n                            this.props.categories.map((category)=>{\r\n                                return(\r\n                                <React.Fragment>\r\n                                    \r\n                                <Dropdown.Header>{category.title}</Dropdown.Header>\r\n                \r\n                                {\r\n                                    category.subcategories.map((subcategory)=>{\r\n                                    return(\r\n                                        <Dropdown.Item onClick={()=>this.handleCategorySelect(subcategory,category.title)} text={subcategory} />\r\n                                    );\r\n                                })\r\n                                }\r\n                \r\n                               \r\n                            \r\n                                <Dropdown.Divider />\r\n                              \r\n                                \r\n                \r\n                                </React.Fragment>\r\n                                );\r\n                              })\r\n                              : null\r\n                \r\n                        }\r\n                      \r\n                       </Dropdown.Menu>  \r\n                       \r\n                  </Dropdown>\r\n                  <Label color={color} style={{marginLeft:'15px'}}>{subcategorySelected}</Label>\r\n\r\n</Form.Input>\r\n                        \r\n\r\n                        <Button color = 'olive' fluid size = 'large' onClick={()=>this.onSubmit()}>Submit</Button>\r\n                    </Segment>\r\n\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </div>\r\n\r\n\r\n   \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    categories: state.stories.categories,\r\n    story: state.stories.story,\r\n  });\r\n  \r\n  \r\n  \r\n  export default connect(mapStateToProps, {getCategories, postStory})(NewStory);"]},"metadata":{},"sourceType":"module"}