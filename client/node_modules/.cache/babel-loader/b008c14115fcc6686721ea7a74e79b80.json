{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\StoryDetail\\\\StoryDetail.js\";\nimport React, { Component } from 'react';\nimport StoryDetailOwner from './StoryDetailOwner/StoryDetailOwner';\nimport StoryDetailViewer from './StoryDetailViewer/StoryDetailViewer';\nimport Spinner from '../Utils/Spinner';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\nimport { getStory } from '../../actions/storyActions';\nimport Navbar from '../Navbar/Navbar';\n\nvar StoryDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StoryDetail, _Component);\n\n  function StoryDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StoryDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoryDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      authId: '',\n      storyId: '0'\n    };\n    return _this;\n  }\n\n  _createClass(StoryDetail, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getStory(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          authId = _this$state.authId,\n          storyId = _this$state.storyId;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), \"//if user is owner they see extra stuff like ability to add more events\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(StoryDetailViewer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return StoryDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    story: state.stories.story,\n    isLoading: state.stories.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStory: getStory\n})(StoryDetail);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\StoryDetail\\StoryDetail.js"],"names":["React","Component","StoryDetailOwner","StoryDetailViewer","Spinner","connect","Message","getStory","Navbar","StoryDetail","state","isLoading","authId","storyId","props","match","params","id","history","mapStateToProps","auth","story","stories"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAUC,OAAV,QAAyB,mBAAzB;AAEA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;IAIMC,W;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAC,IADJ;AAENC,MAAAA,MAAM,EAAC,EAFD;AAGNC,MAAAA,OAAO,EAAC;AAHF,K;;;;;;yCAOY;AAElB,WAAKC,KAAL,CAAWP,QAAX,CAAoB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C;AACD;;;6BAIQ;AAAA,wBACiB,KAAKP,KADtB;AAAA,UACDE,MADC,eACDA,MADC;AAAA,UACMC,OADN,eACMA,OADN;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,6EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CALH,CADF;AAkBD;;;;EApCuBjB,S;;AAuC1B,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAAAT,KAAK;AAAA,SAAK;AAChCU,IAAAA,IAAI,EAAEV,KAAK,CAACU,IADoB;AAEhCC,IAAAA,KAAK,EAAEX,KAAK,CAACY,OAAN,CAAcD,KAFW;AAGhCV,IAAAA,SAAS,EAAED,KAAK,CAACY,OAAN,CAAcX;AAHO,GAAL;AAAA,CAA7B;;AAOA,eAAeN,OAAO,CAACc,eAAD,EAAkB;AAACZ,EAAAA,QAAQ,EAARA;AAAD,CAAlB,CAAP,CAAqCE,WAArC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport StoryDetailOwner from './StoryDetailOwner/StoryDetailOwner';\r\nimport StoryDetailViewer from './StoryDetailViewer/StoryDetailViewer';\r\nimport Spinner from '../Utils/Spinner';\r\nimport { connect } from 'react-redux';\r\nimport {  Message } from 'semantic-ui-react'\r\n\r\nimport { getStory } from '../../actions/storyActions';\r\n\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n\r\nclass StoryDetail extends Component {\r\n\r\n  state = {\r\n    isLoading:true,\r\n    authId:'',\r\n    storyId:'0',\r\n\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n    this.props.getStory(this.props.match.params.id);  \r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const{authId,storyId} = this.state;\r\n    return (\r\n      <div>\r\n          <Navbar history={this.props.history}/>\r\n\r\n          \r\n          //if user is owner they see extra stuff like ability to add more events\r\n         <div>\r\n\r\n          <StoryDetailViewer   />\r\n          \r\n       \r\n    {/*<StoryDetailOwner />*/}\r\n          </div>\r\n          \r\n      \r\n\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  story: state.stories.story,\r\n  isLoading: state.stories.isLoading,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getStory})(StoryDetail);"]},"metadata":{},"sourceType":"module"}