{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\Profile\\\\ProfileViewer.js\";\n//Shows Profile by handle.\nimport React, { Component } from 'react';\nimport { Grid, Image, Label, Segment, Container, Card, Menu, Divider } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { getStoriesByProfile } from '../../actions/storyActions';\n\nvar ProfileViewer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileViewer, _Component);\n\n  function ProfileViewer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProfileViewer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProfileViewer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.selectStory = function (id) {\n      _this.props.history.push(\"/story/detail/\".concat(id));\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileViewer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getStoriesByProfile(this.props.match.params.handle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        horizontal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Posts \"), React.createElement(Card.Group, {\n        itemsPerRow: 4,\n        stackable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.profileStories ? this.props.profileStories.map(function (story) {\n        return React.createElement(Card, {\n          onClick: function onClick() {\n            return _this2.selectStory(story._id);\n          },\n          fluid: true,\n          style: {\n            backgroundColor: \"#4c4c4c\",\n            boxShadow: \"none\"\n          },\n          raised: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Image, {\n          src: story.image,\n          width: '100%',\n          height: 200,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(Card.Content, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          style: {\n            color: 'white'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \" \", story.title), React.createElement(Card.Meta, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Label, {\n          color: \"olive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, story.category), React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, story.subcategory)), React.createElement(Card.Description, {\n          style: {\n            color: '#7a7a7a '\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, story.description)), React.createElement(Menu, {\n          fluid: true,\n          widths: 3,\n          text: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          style: {\n            color: 'gray'\n          },\n          name: \"24\",\n          icon: \"heart\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(Menu.Item, {\n          style: {\n            color: 'gray'\n          },\n          name: \"12\",\n          icon: \"comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }), React.createElement(Menu.Item, {\n          style: {\n            color: 'gray'\n          },\n          name: \"120\",\n          icon: \"eye\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        })));\n      }) : null));\n    }\n  }]);\n\n  return ProfileViewer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profileStories: state.stories.profileStories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStoriesByProfile: getStoriesByProfile\n})(ProfileViewer);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\Profile\\ProfileViewer.js"],"names":["React","Component","Grid","Image","Label","Segment","Container","Card","Menu","Divider","connect","getStoriesByProfile","ProfileViewer","selectStory","id","props","history","push","match","params","handle","profileStories","map","story","_id","backgroundColor","boxShadow","image","color","title","category","subcategory","description","mapStateToProps","state","stories"],"mappings":"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","sourcesContent":["//Shows Profile by handle.\r\n\r\nimport React, { Component } from 'react'\r\nimport { Grid, Image, Label, Segment, Container, Card,Menu, Divider } from 'semantic-ui-react'\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getStoriesByProfile} from '../../actions/storyActions';\r\n\r\n class ProfileViewer extends Component {\r\n\r\n\r\n  componentWillMount(){\r\n    this.props.getStoriesByProfile(this.props.match.params.handle);  \r\n\r\n  }\r\n  selectStory = id =>{\r\n\r\n    this.props.history.push(`/story/detail/${id}`);\r\n\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      \r\n      <Container  >\r\n        <Divider horizontal>Posts </Divider>\r\n      <Card.Group itemsPerRow={4} stackable>\r\n      \r\n       \r\n        {\r\n          this.props.profileStories? this.props.profileStories.map (story=>\r\n        <Card  onClick={()=>this.selectStory(story._id)} fluid style = {{  backgroundColor: \"#4c4c4c\", boxShadow:\"none\"}} raised >  \r\n        <Image src= {story.image} width={'100%'} height={200}/>\r\n    \r\n        <Card.Content  fluid   >\r\n          \r\n          <Card.Header style = {{color:'white'}}> {story.title}</Card.Header>\r\n          <Card.Meta>\r\n            \r\n            <Label color='olive'>{story.category}</Label>\r\n            <Label >{story.subcategory}</Label>\r\n    \r\n          </Card.Meta>\r\n          \r\n          <Card.Description  style = {{color:'#7a7a7a '}} >{story.description}</Card.Description>\r\n        </Card.Content>\r\n     \r\n        <Menu  fluid widths={3} text>\r\n            <Menu.Item style = {{color:'gray'}}  name='24'  icon='heart'/>\r\n            <Menu.Item style = {{color:'gray'}} name='12'  icon='comment'/>\r\n            <Menu.Item style = {{color:'gray'}}name='120'  icon='eye'/>\r\n    \r\n          </Menu>\r\n    \r\n        \r\n      </Card>\r\n\r\n        )\r\n        : null}\r\n        \r\n      </Card.Group>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\r\n  profileStories: state.stories.profileStories,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {getStoriesByProfile})(ProfileViewer);\r\n"]},"metadata":{},"sourceType":"module"}