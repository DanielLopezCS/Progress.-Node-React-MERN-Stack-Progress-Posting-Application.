{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, GET_STORIES, GET_CATEGORIES, POST_STORY, POST_EVENT, GET_STORY, POST_FAVORITE, POST_UNFAVORITE, POST_COMMENT, GET_STORIES_PROFILE, UPLOAD_EVENT_IMAGE } from './types'; // GET Stories\n\nexport var getStories = function getStories() {\n  return function (dispatch) {\n    axios.get('/api/stories').then(function (res) {\n      return dispatch({\n        type: GET_STORIES,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // GET Stories\n\nexport var getCategories = function getCategories() {\n  return function (dispatch) {\n    axios.get('/api/stories/utils/categories').then(function (res) {\n      return dispatch({\n        type: GET_CATEGORIES,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // POST a story\n\nexport var postStory = function postStory(postData) {\n  return function (dispatch) {\n    axios.post('/api/stories', postData).then(function (res) {\n      return dispatch({\n        type: POST_STORY,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // POST a story\n\nexport var postComment = function postComment(storyID, commentData, history) {\n  return function (dispatch) {\n    axios.post(\"/api/stories/comment/\".concat(storyID), commentData).then(function (res) {\n      return dispatch({\n        type: POST_COMMENT,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // GET a story by id\n\nexport var getStory = function getStory(storyID) {\n  return function (dispatch) {\n    axios.get(\"/api/stories/\".concat(storyID)).then(function (res) {\n      dispatch({\n        type: GET_STORY,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // POST a favorite to a post\n\nexport var postFavorite = function postFavorite(postID) {\n  return function (dispatch) {\n    axios.post(\"/api/stories/favorite/\".concat(postID)).then(function (res) {\n      return dispatch({\n        type: POST_FAVORITE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // POST a favorite to a post\n\nexport var postUnfavorite = function postUnfavorite(postID) {\n  return function (dispatch) {\n    axios.post(\"/api/stories/unfavorite/\".concat(postID)).then(function (res) {\n      return dispatch({\n        type: POST_UNFAVORITE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // GET a stories by user profile handle\n\nexport var getStoriesByProfile = function getStoriesByProfile(handle) {\n  return function (dispatch) {\n    axios.get(\"/api/stories/profile/\".concat(handle)).then(function (res) {\n      dispatch({\n        type: GET_STORIES_PROFILE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //POST an event to a story by id\n\nexport var postEvent = function postEvent(storyID, eventData) {\n  return function (dispatch) {\n    axios.post(\"/api/stories/event/\".concat(storyID), eventData).then(function (res) {\n      return dispatch({\n        type: POST_EVENT,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //route api/stories/upload/event/:story_id/:event_id/\n//POST an event to a story by id\n\nexport var uploadEventImage = function uploadEventImage(storyID, eventID, image) {\n  return function (dispatch) {\n    alert(\"URL: \" + \"/api/stories/upload/event/\".concat(storyID, \"/\").concat(eventID));\n    axios(\"/api/stories/upload/event/\".concat(storyID, \"/\").concat(eventID), {\n      method: 'POST',\n      data: image,\n      headers: {\n        // 'Authorization': `bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      return dispatch({\n        type: UPLOAD_EVENT_IMAGE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\actions\\storyActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","GET_STORIES","GET_CATEGORIES","POST_STORY","POST_EVENT","GET_STORY","POST_FAVORITE","POST_UNFAVORITE","POST_COMMENT","GET_STORIES_PROFILE","UPLOAD_EVENT_IMAGE","getStories","dispatch","get","then","res","type","payload","data","catch","err","response","getCategories","postStory","postData","post","postComment","storyID","commentData","history","getStory","postFavorite","postID","postUnfavorite","getStoriesByProfile","handle","postEvent","eventData","uploadEventImage","eventID","image","alert","method","headers"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport { GET_ERRORS, GET_STORIES, GET_CATEGORIES, POST_STORY, POST_EVENT, \r\n  GET_STORY, POST_FAVORITE, POST_UNFAVORITE, POST_COMMENT, GET_STORIES_PROFILE, \r\n  UPLOAD_EVENT_IMAGE,\r\n} from './types';\r\n\r\n// GET Stories\r\nexport const getStories = () => dispatch => {\r\n  axios\r\n    .get('/api/stories')\r\n    .then(res => \r\n        dispatch({\r\n        type:GET_STORIES,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\n// GET Stories\r\nexport const getCategories = () => dispatch => {\r\n  axios\r\n    .get('/api/stories/utils/categories')\r\n    .then(res => \r\n        dispatch({\r\n        type:GET_CATEGORIES,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\n// POST a story\r\nexport const postStory = (postData) => dispatch => {\r\n  axios\r\n    .post('/api/stories',postData)\r\n    .then(res => \r\n        dispatch({\r\n        type:POST_STORY,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// POST a story\r\nexport const postComment = (storyID,commentData, history) => dispatch => {\r\n\r\n  axios\r\n    .post(`/api/stories/comment/${storyID}`,commentData)\r\n    .then(res => \r\n        dispatch({\r\n        type:POST_COMMENT,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// GET a story by id\r\nexport const getStory = (storyID) => dispatch => {\r\n  axios\r\n    .get(`/api/stories/${storyID}`)\r\n    .then(res => {\r\n        dispatch({\r\n        type:GET_STORY,\r\n        payload: res.data,\r\n\r\n        })})\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\n// POST a favorite to a post\r\nexport const postFavorite = (postID) => dispatch => {\r\n  axios\r\n    .post(`/api/stories/favorite/${postID}`)\r\n    .then(res => \r\n        dispatch({\r\n        type:POST_FAVORITE,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\n// POST a favorite to a post\r\nexport const postUnfavorite = (postID) => dispatch => {\r\n  axios\r\n    .post(`/api/stories/unfavorite/${postID}`)\r\n    .then(res => \r\n        dispatch({\r\n        type:POST_UNFAVORITE,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n\r\n// GET a stories by user profile handle\r\n\r\nexport const getStoriesByProfile = (handle) => dispatch => {\r\n  axios\r\n    .get(`/api/stories/profile/${handle}`)\r\n    .then(res => {\r\n        dispatch({\r\n        type:GET_STORIES_PROFILE,\r\n        payload: res.data,\r\n\r\n        })})\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n//POST an event to a story by id\r\nexport const postEvent = (storyID, eventData) => dispatch => {\r\n  axios\r\n    .post(`/api/stories/event/${storyID}`, eventData)\r\n    .then(res => \r\n        dispatch({\r\n        type:POST_EVENT,\r\n        payload: res.data,\r\n        }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n//route api/stories/upload/event/:story_id/:event_id/\r\n//POST an event to a story by id\r\nexport const uploadEventImage = (storyID, eventID, image) => dispatch => {\r\n  alert(\"URL: \" + `/api/stories/upload/event/${storyID}/${eventID}`);\r\n\r\n  axios(`/api/stories/upload/event/${storyID}/${eventID}`,{\r\n   method: 'POST',\r\n   data : image,\r\n   headers: {\r\n    // 'Authorization': `bearer ${token}`,\r\n    'Content-Type': 'application/json'\r\n  }\r\n}).then(\r\n  res=> dispatch({\r\n    type:UPLOAD_EVENT_IMAGE,\r\n    payload: res.data,\r\n    })).catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n    }\r\n\r\n\r\n\r\n \r\n"]},"metadata":{},"sourceType":"module"}