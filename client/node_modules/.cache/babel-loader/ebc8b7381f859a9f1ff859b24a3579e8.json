{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\NewStory\\\\NewStory.js\";\nimport React, { Component } from 'react';\nimport { Message, Dropdown, Segment, Header, Button, Grid, Form, Icon, Label } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCategories, postStory } from '../../actions/storyActions';\n\nvar NewStory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewStory, _Component);\n\n  function NewStory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewStory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewStory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      title: '',\n      description: '',\n      activeItem: 'home',\n      subcategorySelected: 'Please Choose A Category',\n      color: 'red'\n    };\n\n    _this.handleItemClick = function (e, _ref) {\n      var name = _ref.name;\n\n      _this.setState({\n        activeItem: name\n      });\n    };\n\n    _this.handleCategorySelect = function (subcategory) {\n      _this.setState({\n        subcategorySelected: subcategory,\n        color: 'olive'\n      });\n    };\n\n    _this.onSubmit = function () {\n      var postData = {\n        title: _this.state.title,\n        description: _this.state.description,\n        subcategory: _this.state.subcategorySelected\n      };\n      alert(postData);\n    };\n\n    return _this;\n  }\n\n  _createClass(NewStory, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getCategories();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          activeItem = _this$state.activeItem,\n          subcategorySelected = _this$state.subcategorySelected,\n          color = _this$state.color;\n      return React.createElement(\"div\", {\n        style: {\n          height: '100vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        icon: true,\n        color: \"olive\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"lightbulb outline\",\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), \"Upload Your Story!\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        name: \"title\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Title\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.state.name,\n        maxLength: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Form.TextArea, {\n        fluid: true,\n        name: \"description\",\n        icon: \"mail\",\n        iconPosition: \"left\",\n        placeholder: \"Description\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.state.email,\n        maxLength: \"300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"password2\",\n        icon: \"repeat\",\n        iconPosition: \"left\",\n        placeholder: \"Password Confirmation\",\n        onChange: this.handleChange,\n        type: \"password\",\n        value: this.state.password2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        text: \"Category\",\n        scrolling: true,\n        selection: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.props.categories ? this.props.categories.map(function (category) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Dropdown.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, category.title), category.subcategories.map(function (subcategory) {\n          return React.createElement(Dropdown.Item, {\n            onClick: function onClick() {\n              return _this2.handleCategorySelect(subcategory);\n            },\n            text: subcategory,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          });\n        }), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }));\n      }) : null)), React.createElement(Label, {\n        color: color,\n        style: {\n          marginLeft: '15px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, subcategorySelected)), React.createElement(Button, {\n        color: \"olive\",\n        fluid: true,\n        size: \"large\",\n        onClick: function onClick() {\n          return _this2.onSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return NewStory;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    categories: state.stories.categories,\n    story: state.stories.story\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCategories: getCategories,\n  postStory: postStory\n})(NewStory);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\NewStory\\NewStory.js"],"names":["React","Component","Message","Dropdown","Segment","Header","Button","Grid","Form","Icon","Label","connect","Link","getCategories","postStory","NewStory","state","title","description","activeItem","subcategorySelected","color","handleItemClick","e","name","setState","handleCategorySelect","subcategory","onSubmit","postData","alert","props","height","maxWidth","handleSubmit","handleChange","email","password2","categories","map","category","subcategories","marginLeft","mapStateToProps","auth","stories","story"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Message, Dropdown, Segment,Header,Button, Grid, Form, Icon, Label } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { getCategories, postStory } from '../../actions/storyActions';\r\n\r\n\r\nclass NewStory extends Component {\r\n  state = { \r\n    title:'',\r\n    description:'',\r\n    activeItem: 'home',\r\n    subcategorySelected:'Please Choose A Category',\r\n    color:'red',\r\n}\r\n\r\n  handleItemClick = (e, { name }) => \r\n  \r\n\r\n  \r\n  {\r\n      this.setState({ activeItem: name });\r\n\r\n}\r\n  componentWillMount()\r\n  {\r\n    this.props.getCategories();\r\n\r\n  }\r\n\r\n  handleCategorySelect = (subcategory) =>{\r\n        this.setState({subcategorySelected:subcategory,color:'olive'});\r\n      }\r\n    \r\n  onSubmit = () =>{\r\n      const postData = {\r\n          title:this.state.title,\r\n          description: this.state.description,\r\n          subcategory: this.state.subcategorySelected,\r\n      }\r\n      alert(postData);\r\n  }\r\n  render() {\r\n    const { activeItem, subcategorySelected, color } = this.state\r\n\r\n    return (\r\n        <div style={{height:'100vh'}}>         \r\n        <Grid textAlign = 'center' verticalAlign ='middle' className='app'>\r\n            <Grid.Column style = {{maxWidth:450}}>\r\n                <Header as='h2' icon color ='olive' textAlign = 'center'>\r\n                    <Icon name = 'lightbulb outline' color = 'olive'/>\r\n                    Upload Your Story!\r\n                </Header>\r\n                <Form onSubmit = {this.handleSubmit}>\r\n                    <Segment stacked >\r\n                        <Form.Input fluid name='title' icon='user' iconPosition='left' \r\n                        placeholder ='Title' onChange = {this.handleChange} type = 'text'\r\n                        value = {this.state.name}   maxLength=\"30\"\r\n                        />\r\n            \r\n                         <Form.TextArea fluid name='description' icon='mail' iconPosition='left' \r\n                        placeholder ='Description' onChange = {this.handleChange} type = 'text'\r\n                        value = {this.state.email} maxLength=\"300\"/>\r\n\r\n                        \r\n                        \r\n                        <Form.Input fluid name='password2' icon='repeat' iconPosition='left' \r\n                        placeholder ='Password Confirmation' onChange = {this.handleChange} type = 'password'\r\n                        value = {this.state.password2}><Dropdown text='Category' scrolling selection>\r\n                        \r\n                        <Dropdown.Menu >\r\n                        {\r\n                            this.props.categories? \r\n                            \r\n                            this.props.categories.map((category)=>{\r\n                                return(\r\n                                <React.Fragment>\r\n                                    \r\n                                <Dropdown.Header>{category.title}</Dropdown.Header>\r\n                \r\n                                {\r\n                                    category.subcategories.map((subcategory)=>{\r\n                                    return(\r\n                                        <Dropdown.Item onClick={()=>this.handleCategorySelect(subcategory)} text={subcategory} />\r\n                                    );\r\n                                })\r\n                                }\r\n                \r\n                               \r\n                            \r\n                                <Dropdown.Divider />\r\n                              \r\n                                \r\n                \r\n                                </React.Fragment>\r\n                                );\r\n                              })\r\n                              : null\r\n                \r\n                        }\r\n                      \r\n                       </Dropdown.Menu>  \r\n                       \r\n                  </Dropdown>\r\n                  <Label color={color} style={{marginLeft:'15px'}}>{subcategorySelected}</Label>\r\n\r\n</Form.Input>\r\n                        \r\n\r\n                        <Button color = 'olive' fluid size = 'large' onClick={()=>this.onSubmit()}>Submit</Button>\r\n                    </Segment>\r\n\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </div>\r\n\r\n\r\n   \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    categories: state.stories.categories,\r\n    story: state.stories.story,\r\n  });\r\n  \r\n  \r\n  \r\n  export default connect(mapStateToProps, {getCategories, postStory})(NewStory);"]},"metadata":{},"sourceType":"module"}