{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\StoryDetail\\\\StoryDetailOwner\\\\StoryDetailOwner.js\";\nimport React, { Component } from 'react';\nimport { Container, Divider, Icon, Button, Message } from 'semantic-ui-react';\nimport Events from '../Sections/Events/Events';\nimport AddEvent from '../Sections/AddEvent/AddEvent';\nimport Comments from '../Sections/Comments/Comments';\nimport Statistics from '../Sections/Statistics/Statistics';\nimport Description from '../Sections/Description/Description';\nimport Spinner from '../../Utils/Spinner';\nimport { connect } from 'react-redux';\nimport { postFavorite, postUnfavorite, deleteStory } from '../../../actions/storyActions';\n\nvar StoryDetailOwner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StoryDetailOwner, _Component);\n\n  function StoryDetailOwner() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StoryDetailOwner);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoryDetailOwner)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      events: [],\n      comments: [],\n      favorites: 0,\n      views: 0,\n      favorited: false,\n      storyID: '',\n      //for adding a new event\n      title: '',\n      date: '',\n      description: ''\n    };\n\n    _this.handleDelete = function () {\n      _this.props.deleteStory(_this.props.story._id);\n\n      _this.props.history.push('/');\n    };\n\n    return _this;\n  }\n\n  _createClass(StoryDetailOwner, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.story.favorites) {\n        this.setState({\n          events: nextProps.story.events,\n          comments: nextProps.story.comments,\n          favorites: nextProps.story.favorites.length,\n          views: nextProps.story.views,\n          storyID: nextProps.story._id\n        });\n        this.findUserFavorite(nextProps.story.favorites);\n      }\n    }\n  }, {\n    key: \"findUserFavorite\",\n    value: function findUserFavorite(favorites) {\n      var auth = this.props.auth;\n\n      if (favorites.filter(function (favorite) {\n        return favorite.user === auth.user.id;\n      }).length > 0) {\n        this.setState({\n          favorited: true\n        });\n        return true;\n      } else {\n        this.setState({\n          favorited: false\n        });\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          events = _this$state.events,\n          comments = _this$state.comments,\n          favorites = _this$state.favorites,\n          views = _this$state.views,\n          favorited = _this$state.favorited;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, !this.props.story ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }) : React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.props.story && React.createElement(Message, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"You published this story on \", this.props.story.date), React.createElement(Description, {\n        image: this.props.story.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        style: {\n          color: 'white'\n        },\n        horizontal: true,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" Events (\", this.props.story && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.story.events.length), \")\"), React.createElement(Events, {\n        events: events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Statistics, {\n        views: views,\n        comments: comments.length,\n        favorites: favorites,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), !favorited && this.props.auth.isAuthenticated ? React.createElement(Button, {\n        color: \"teal\",\n        onClick: function onClick() {\n          _this2.props.postFavorite(_this2.props.story._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" Favorite \") : React.createElement(Button, {\n        color: \"red\",\n        onClick: function onClick() {\n          _this2.props.postUnfavorite(_this2.props.story._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" Unfavorite \"), React.createElement(Divider, {\n        style: {\n          color: 'white'\n        },\n        horizontal: true,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" Add Event? \"), React.createElement(AddEvent, {\n        storyID: this.state.storyID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(Button, {\n        fluid: true,\n        icon: \"cross\",\n        color: \"red\",\n        size: \"huge\",\n        onClick: function onClick() {\n          return _this2.handleDelete();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" Delete Story? \"), React.createElement(Divider, {\n        style: {\n          color: 'white'\n        },\n        horizontal: true,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" Comments   ( \", this.props.story && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.story.comments.length), \"  ) \"), React.createElement(Comments, {\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return StoryDetailOwner;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    story: state.stories.story,\n    isLoading: state.stories.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postFavorite: postFavorite,\n  postUnfavorite: postUnfavorite,\n  deleteStory: deleteStory\n})(StoryDetailOwner);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\StoryDetail\\StoryDetailOwner\\StoryDetailOwner.js"],"names":["React","Component","Container","Divider","Icon","Button","Message","Events","AddEvent","Comments","Statistics","Description","Spinner","connect","postFavorite","postUnfavorite","deleteStory","StoryDetailOwner","state","events","comments","favorites","views","favorited","storyID","title","date","description","handleDelete","props","story","_id","history","push","nextProps","setState","length","findUserFavorite","auth","filter","favorite","user","id","image","color","isAuthenticated","mapStateToProps","stories","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container,  Divider, Icon, Button, Message} from 'semantic-ui-react'\r\nimport Events from '../Sections/Events/Events';\r\nimport AddEvent from '../Sections/AddEvent/AddEvent';\r\nimport Comments from '../Sections/Comments/Comments';\r\nimport Statistics from '../Sections/Statistics/Statistics';\r\nimport Description from '../Sections/Description/Description';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { postFavorite, postUnfavorite, deleteStory } from '../../../actions/storyActions';\r\n\r\n\r\n\r\nclass StoryDetailOwner extends Component {\r\n\r\n  state={\r\n    events:[],\r\n    comments:[],\r\n    favorites:0,\r\n    views: 0,\r\n    favorited: false,\r\n    storyID:'',\r\n\r\n    //for adding a new event\r\n    title:'',\r\n    date: '',\r\n    description:'',\r\n\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n    if(nextProps.story.favorites){\r\n    this.setState({\r\n      events:nextProps.story.events,\r\n      comments: nextProps.story.comments,\r\n      favorites: nextProps.story.favorites.length,\r\n      views: nextProps.story.views,\r\n      storyID: nextProps.story._id,\r\n    });\r\n    this.findUserFavorite(nextProps.story.favorites);\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  findUserFavorite(favorites) {\r\n    const { auth } = this.props;\r\n\r\n    if (favorites.filter(favorite => favorite.user === auth.user.id).length > 0) {\r\n      this.setState({favorited:true});\r\n      return true;\r\n    } else {\r\n      this.setState({favorited:false});\r\n      return false;\r\n    }\r\n\r\n \r\n \r\n  }\r\n  handleDelete =()=>{\r\n    this.props.deleteStory(this.props.story._id);\r\n    this.props.history.push('/');\r\n\r\n  }\r\n  \r\n\r\n  render() {\r\n    const{events, comments, favorites, views, favorited} = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n      {!this.props.story? <Spinner/>:\r\n    <Container>\r\n  \r\n      {this.props.story &&<Message color='teal'>You published this story on {this.props.story.date}</Message>\r\n      }\r\n\r\n      <Description image = {this.props.story.image}/>\r\n\r\n\r\n<Divider style={{color:'white'}} horizontal color='white'> Events ({this.props.story&& <span>{this.props.story.events.length}</span>})</Divider>\r\n        <Events events = {events}/>\r\n        <Statistics views = {views} comments = {comments.length} favorites = {favorites} />\r\n        <br/>\r\n        \r\n        {!favorited&&this.props.auth.isAuthenticated?\r\n        <Button  color='teal' onClick={()=>{this.props.postFavorite(this.props.story._id)}}> Favorite </Button>\r\n        :\r\n        <Button color='red' onClick={()=>{this.props.postUnfavorite(this.props.story._id)}}> Unfavorite </Button>\r\n\r\n      }\r\n\r\n        <Divider style={{color:'white'}} horizontal color='white'> Add Event? </Divider>\r\n        <AddEvent storyID ={this.state.storyID} />\r\n        <br/><br/>\r\n        <Button fluid icon='cross' color='red' size='huge' onClick={()=>this.handleDelete()}> Delete Story? </Button>\r\n     \r\n\r\n        <Divider  style={{color:'white'}} horizontal color='white'> Comments   ( {this.props.story&& <span>{this.props.story.comments.length}</span>}  ) </Divider>\r\n        <Comments history={this.props.history} />\r\n\r\n\r\n\r\n    \r\n    </Container>\r\n      }\r\n  </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  story:  state.stories.story,\r\n  isLoading: state.stories.isLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {postFavorite, postUnfavorite, deleteStory})(StoryDetailOwner);\r\n"]},"metadata":{},"sourceType":"module"}