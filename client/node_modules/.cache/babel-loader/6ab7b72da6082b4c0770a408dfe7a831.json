{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\StoryDetail\\\\StoryDetailViewer\\\\StoryDetailViewer.js\";\nimport React, { Component } from 'react';\nimport { Card, Container, Header, Label, Image, Divider, Button } from 'semantic-ui-react';\nimport Events from '../Sections/Events/Events';\nimport Comments from '../Sections/Comments/Comments';\nimport Statistics from '../Sections/Statistics/Statistics';\nimport { connect } from 'react-redux';\nimport { postFavorite } from '../../../actions/storyActions';\n\nvar StoryDetailViewer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StoryDetailViewer, _Component);\n\n  function StoryDetailViewer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StoryDetailViewer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoryDetailViewer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      events: [],\n      comments: [],\n      favorites: 0,\n      views: 0,\n      favorited: false\n    };\n    return _this;\n  }\n\n  _createClass(StoryDetailViewer, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        events: nextProps.story.events,\n        comments: nextProps.story.comments,\n        favorites: nextProps.story.favorites.length,\n        views: nextProps.story.views\n      });\n    }\n  }, {\n    key: \"findUserFavorite\",\n    value: function findUserFavorite(favorites) {\n      var auth = this.props.auth;\n\n      if (favorites.filter(function (favorite) {\n        return favorite.user === auth.user.id;\n      }).length > 0) {\n        alert(\"TRUE\");\n        return true;\n      } else {\n        alert(\"FALSE\");\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          events = _this$state.events,\n          comments = _this$state.comments,\n          favorites = _this$state.favorites,\n          views = _this$state.views,\n          favorited = _this$state.favorited;\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Divider, {\n        style: {\n          color: 'white'\n        },\n        horizontal: true,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" Events (\", events.length, \")\"), React.createElement(Events, {\n        events: events,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Statistics, {\n        views: views,\n        comments: comments.length,\n        favorites: favorites,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Button, {\n        icon: \"heart\",\n        color: \"teal\",\n        onClick: function onClick() {\n          _this2.props.postFavorite(_this2.props.story._id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" Favorite \"), React.createElement(Divider, {\n        style: {\n          color: 'white'\n        },\n        horizontal: true,\n        color: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" Comments (\", comments.length, \") \"), React.createElement(Comments, {\n        comments: comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StoryDetailViewer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    story: state.stories.story,\n    isLoading: state.stories.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postFavorite: postFavorite\n})(StoryDetailViewer);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\StoryDetail\\StoryDetailViewer\\StoryDetailViewer.js"],"names":["React","Component","Card","Container","Header","Label","Image","Divider","Button","Events","Comments","Statistics","connect","postFavorite","StoryDetailViewer","state","events","comments","favorites","views","favorited","nextProps","setState","story","length","auth","props","filter","favorite","user","id","alert","color","_id","mapStateToProps","stories","isLoading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, Container, Header, Label, Image, Divider,  Button} from 'semantic-ui-react'\r\nimport Events from '../Sections/Events/Events';\r\nimport Comments from '../Sections/Comments/Comments';\r\nimport Statistics from '../Sections/Statistics/Statistics';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { postFavorite } from '../../../actions/storyActions';\r\n\r\n\r\n class StoryDetailViewer extends Component {\r\n  state={\r\n    events:[],\r\n    comments:[],\r\n    favorites:0,\r\n    views: 0,\r\n    favorited: false,\r\n   \r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n\r\n    this.setState({\r\n      events:nextProps.story.events,\r\n      comments: nextProps.story.comments,\r\n      favorites: nextProps.story.favorites.length,\r\n      views: nextProps.story.views,\r\n\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  findUserFavorite(favorites) {\r\n    const { auth } = this.props;\r\n    if (favorites.filter(favorite => favorite.user === auth.user.id).length > 0) {\r\n      alert(\"TRUE\");\r\n      return true;\r\n    } else {\r\n      alert(\"FALSE\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  \r\n  render() {\r\n\r\n    const{events, comments, favorites, views, favorited} = this.state;\r\n\r\n    return (\r\n    <Container>\r\n        <Divider style={{color:'white'}} horizontal color='white'> Events ({events.length})</Divider>\r\n        <Events events = {events}/>\r\n        <Statistics views = {views} comments = {comments.length} favorites = {favorites} />\r\n        <br/>\r\n        <Button icon='heart' color='teal' onClick={()=>{this.props.postFavorite(this.props.story._id)}}> Favorite </Button>\r\n\r\n        <Divider  style={{color:'white'}} horizontal color='white'> Comments ({comments.length}) </Divider>\r\n        <Comments comments = {comments} />\r\n    </Container>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  story:  state.stories.story,\r\n  isLoading: state.stories.isLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps, {postFavorite})(StoryDetailViewer);\r\n"]},"metadata":{},"sourceType":"module"}