{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\StoryDetail\\\\StoryDetail.js\";\nimport React, { Component } from 'react';\nimport StoryDetailOwner from './StoryDetailOwner/StoryDetailOwner';\nimport StoryDetailViewer from './StoryDetailViewer/StoryDetailViewer';\nimport Spinner from '../Utils/Spinner';\nimport { connect } from 'react-redux';\nimport { getStory } from '../../actions/storyActions';\nimport Navbar from '../Navbar/Navbar';\n\nvar StoryDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StoryDetail, _Component);\n\n  function StoryDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StoryDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoryDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(StoryDetail, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getStory(this.props.match.params.id);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), this.props.story && //if user is owner they see extra stuff like ability to add more events\n      this.props.auth.user._id !== this.props.story.user._id ? React.createElement(StoryDetailViewer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }) : React.createElement(StoryDetailOwner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StoryDetail;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    story: state.stories.story,\n    isLoading: state.stories.isLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getStory: getStory\n})(StoryDetail);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\StoryDetail\\StoryDetail.js"],"names":["React","Component","StoryDetailOwner","StoryDetailViewer","Spinner","connect","getStory","Navbar","StoryDetail","state","isLoading","props","match","params","id","setState","history","story","auth","user","_id","mapStateToProps","stories"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;IAIMC,W;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAC;AADJ,K;;;;;;yCAIY;AAElB,WAAKC,KAAL,CAAWL,QAAX,CAAoB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C;AACD;;;gDAE0B;AACzB,WAAKC,QAAL,CAAc;AAACL,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD;;;6BAGQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWK,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGK,KAAKL,KAAL,CAAWM,KAAX,IACD;AACA,WAAKN,KAAL,CAAWO,IAAX,CAAgBC,IAAhB,CAAqBC,GAArB,KAA2B,KAAKT,KAAL,CAAWM,KAAX,CAAiBE,IAAjB,CAAsBC,GAFhD,GAGD,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHC,GAID,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADF;AAcD;;;;EA/BuBnB,S;;AAkC1B,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAAZ,KAAK;AAAA,SAAK;AAChCS,IAAAA,IAAI,EAAET,KAAK,CAACS,IADoB;AAEhCD,IAAAA,KAAK,EAAER,KAAK,CAACa,OAAN,CAAcL,KAFW;AAGhCP,IAAAA,SAAS,EAAED,KAAK,CAACa,OAAN,CAAcZ;AAHO,GAAL;AAAA,CAA7B;;AAOA,eAAeL,OAAO,CAACgB,eAAD,EAAkB;AAACf,EAAAA,QAAQ,EAARA;AAAD,CAAlB,CAAP,CAAqCE,WAArC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport StoryDetailOwner from './StoryDetailOwner/StoryDetailOwner';\r\nimport StoryDetailViewer from './StoryDetailViewer/StoryDetailViewer';\r\nimport Spinner from '../Utils/Spinner';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getStory } from '../../actions/storyActions';\r\n\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\n\r\n\r\nclass StoryDetail extends Component {\r\n\r\n  state = {\r\n    isLoading:true,\r\n  }\r\n\r\n  componentWillMount(){\r\n\r\n    this.props.getStory(this.props.match.params.id);  \r\n  }\r\n\r\n  componentWillReceiveProps(){\r\n    this.setState({isLoading:false});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <Navbar history={this.props.history}/>\r\n\r\n          {this.props.story&&\r\n          //if user is owner they see extra stuff like ability to add more events\r\n          this.props.auth.user._id!==this.props.story.user._id?\r\n          <StoryDetailViewer   />:\r\n          <StoryDetailOwner />\r\n          }\r\n      \r\n\r\n      </div>\r\n    ) \r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  story: state.stories.story,\r\n  isLoading: state.stories.isLoading,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, {getStory})(StoryDetail);"]},"metadata":{},"sourceType":"module"}