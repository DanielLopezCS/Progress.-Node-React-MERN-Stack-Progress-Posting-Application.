{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\components\\\\NewStory\\\\NewStory.js\";\nimport React, { Component } from 'react';\nimport { Message, Dropdown, Segment, Header, Button, Grid, Form, Icon } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCategories } from '../../actions/storyActions';\n\nvar NewStory =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewStory, _Component);\n\n  function NewStory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewStory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewStory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeItem: 'home'\n    };\n\n    _this.handleItemClick = function (e, _ref) {\n      var name = _ref.name;\n      return _this.setState({\n        activeItem: name\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewStory, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getCategories();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var activeItem = this.state.activeItem;\n      return React.createElement(\"div\", {\n        style: {\n          height: '100vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        textAlign: \"center\",\n        verticalAlign: \"middle\",\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        icon: true,\n        color: \"olive\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"car\",\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), \"Register for Rider!\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Form.Input, {\n        fluid: true,\n        name: \"name\",\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"Username\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"email\",\n        icon: \"mail\",\n        iconPosition: \"left\",\n        placeholder: \"Email Address\",\n        onChange: this.handleChange,\n        type: \"email\",\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"password\",\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        onChange: this.handleChange,\n        type: \"password\",\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Form.Input, {\n        fluid: true,\n        name: \"password2\",\n        icon: \"repeat\",\n        iconPosition: \"left\",\n        placeholder: \"Password Confirmation\",\n        onChange: this.handleChange,\n        type: \"password\",\n        value: this.state.password2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        style: {\n          backgroundColor: 'olive'\n        },\n        text: \"Categories\",\n        scrolling: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.categories ? this.props.categories.map(function (category) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Dropdown.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, category.title), category.subcategories.map(function (subcategory) {\n          return React.createElement(Dropdown.Item, {\n            text: subcategory,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        }), React.createElement(Dropdown.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      }) : null)), React.createElement(Button, {\n        color: \"olive\",\n        fluid: true,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Message, {\n        color: \"olive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Already a User? \", React.createElement(Link, {\n        to: \"/Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Login\")))));\n    }\n  }]);\n\n  return NewStory;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    categories: state.stories.categories\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCategories: getCategories\n})(NewStory);","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\components\\NewStory\\NewStory.js"],"names":["React","Component","Message","Dropdown","Segment","Header","Button","Grid","Form","Icon","connect","Link","getCategories","NewStory","state","activeItem","handleItemClick","e","name","setState","props","height","maxWidth","handleSubmit","handleChange","email","password","password2","backgroundColor","categories","map","category","title","subcategories","subcategory","mapStateToProps","auth","stories"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Message, Dropdown, Segment,Header,Button, Grid, Form, Icon } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { getCategories } from '../../actions/storyActions';\r\n\r\n\r\nclass NewStory extends Component {\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n  \r\n  componentWillMount()\r\n  {\r\n    this.props.getCategories();\r\n\r\n  }\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n        <div style={{height:'100vh'}}>         \r\n        <Grid textAlign = 'center' verticalAlign ='middle' className='app'>\r\n            <Grid.Column style = {{maxWidth:450}}>\r\n                <Header as='h2' icon color ='olive' textAlign = 'center'>\r\n                    <Icon name = 'car' color = 'olive'/>\r\n                    Register for Rider!\r\n                </Header>\r\n                <Form onSubmit = {this.handleSubmit}>\r\n                    <Segment stacked >\r\n                        <Form.Input fluid name='name' icon='user' iconPosition='left' \r\n                        placeholder ='Username' onChange = {this.handleChange} type = 'text'\r\n                        value = {this.state.name} />\r\n            \r\n                         <Form.Input fluid name='email' icon='mail' iconPosition='left' \r\n                        placeholder ='Email Address' onChange = {this.handleChange} type = 'email'\r\n                        value = {this.state.email}/>\r\n\r\n                         <Form.Input fluid name='password' icon='lock' iconPosition='left' \r\n                        placeholder ='Password' onChange = {this.handleChange} type = 'password'\r\n                        value = {this.state.password}/>\r\n                        \r\n                        <Form.Input fluid name='password2' icon='repeat' iconPosition='left' \r\n                        placeholder ='Password Confirmation' onChange = {this.handleChange} type = 'password'\r\n                        value = {this.state.password2}/>\r\n                        <Dropdown style={{backgroundColor:'olive'}} text='Categories' scrolling>\r\n        <Dropdown.Menu >\r\n        {\r\n            this.props.categories? \r\n            \r\n            this.props.categories.map((category)=>{\r\n                return(\r\n                <React.Fragment>\r\n                    \r\n                <Dropdown.Header>{category.title}</Dropdown.Header>\r\n\r\n                {\r\n                    category.subcategories.map((subcategory)=>{\r\n                    return(\r\n                        <Dropdown.Item text={subcategory} />\r\n                    );\r\n                })\r\n                }\r\n\r\n               \r\n            \r\n                <Dropdown.Divider />\r\n              \r\n                \r\n\r\n                </React.Fragment>\r\n                );\r\n              })\r\n              : null\r\n\r\n        }\r\n      \r\n       </Dropdown.Menu>  \r\n       \r\n  </Dropdown>\r\n\r\n                        <Button color = 'olive' fluid size = 'large'>Submit</Button>\r\n                    </Segment>\r\n\r\n                </Form>\r\n                <Message color='olive'>Already a User? <Link to='/Login'>Login</Link></Message>\r\n            </Grid.Column>\r\n        </Grid>\r\n    </div>\r\n\r\n\r\n   \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    categories: state.stories.categories,\r\n  });\r\n  \r\n  \r\n  \r\n  export default connect(mapStateToProps, {getCategories})(NewStory);"]},"metadata":{},"sourceType":"module"}