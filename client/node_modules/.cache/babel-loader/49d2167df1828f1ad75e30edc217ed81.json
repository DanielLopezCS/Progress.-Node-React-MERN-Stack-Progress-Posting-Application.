{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER, GET_CURRENT_PROFILE, CREATE_PROFILE, PROFILE_LOADING } from './types'; // Register User\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post('/api/users/register', userData).then(function (res) {\n      return history.push('/login');\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Login - Get User Token\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('/api/users/login', userData).then(function (res) {\n      // Save to localStorage\n      var token = res.data.token; // Set token to ls\n\n      localStorage.setItem('jwtToken', token); // Set token to Auth header\n\n      setAuthToken(token); // Decode token to get user data\n\n      var decoded = jwt_decode(token); // Set current user\n\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // Set logged in user\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Get current profile\n\nexport var getCurrentProfile = function getCurrentProfile() {\n  return function (dispatch) {\n    dispatch(setProfileLoading());\n    axios.get('/api/profile').then(function (res) {\n      return dispatch({\n        type: GET_CURRENT_PROFILE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_CURRENT_PROFILE,\n        payload: {}\n      });\n    });\n  };\n}; // Create Profile\n\nexport var createProfile = function createProfile(profile, history) {\n  return function (dispatch) {\n    axios.post('/api/profile', profile).then(function (res) {\n      return history.push('/');\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: 'Require Handle'\n      });\n    });\n  };\n}; // Profile loading\n\nexport var setProfileLoading = function setProfileLoading() {\n  return {\n    type: PROFILE_LOADING\n  };\n}; // Log user out\n\nexport var logoutUser = function logoutUser() {\n  return function (dispatch) {\n    // Remove token from localStorage\n    localStorage.removeItem('jwtToken'); // Remove auth header for future requests\n\n    setAuthToken(false); // Set current user to {} which will set isAuthenticated to false\n\n    dispatch(setCurrentUser({}));\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\actions\\authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","GET_CURRENT_PROFILE","CREATE_PROFILE","PROFILE_LOADING","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","getCurrentProfile","setProfileLoading","get","createProfile","profile","logoutUser","removeItem"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER, GET_CURRENT_PROFILE, CREATE_PROFILE, PROFILE_LOADING } from './types';\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios\r\n    .post('/api/users/register', userData)\r\n    .then(res => history.push('/login'))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - Get User Token\r\nexport const loginUser = userData => dispatch => {\r\n  axios\r\n    .post('/api/users/login', userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n      const { token } = res.data;\r\n      // Set token to ls\r\n      localStorage.setItem('jwtToken', token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// Get current profile\r\nexport const getCurrentProfile = () => dispatch => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get('/api/profile')\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_CURRENT_PROFILE,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_CURRENT_PROFILE,\r\n        payload: {}\r\n      })\r\n    );\r\n};\r\n\r\n\r\n// Create Profile\r\nexport const createProfile = (profile, history) => dispatch => {\r\n  axios\r\n    .post('/api/profile', profile)\r\n    .then(res => history.push('/'))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: 'Require Handle'\r\n      })\r\n    );\r\n};\r\n\r\n\r\n// Profile loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem('jwtToken');\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}