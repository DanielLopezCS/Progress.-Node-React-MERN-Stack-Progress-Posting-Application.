{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\progress\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Provider, connect } from \"react-redux\";\nimport store from './store';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions'; // Check for token\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken); // Decode token and get user info and exp\n\n  var decoded = jwt_decode(localStorage.jwtToken); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  var currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = '/login';\n  }\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Daniel\\Desktop\\progress\\client\\src\\App.js"],"names":["React","Component","Provider","connect","store","BrowserRouter","Router","Route","jwt_decode","setAuthToken","setCurrentUser","logoutUser","localStorage","jwtToken","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAGA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,uBAA3C,C,CAKA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACAJ,EAAAA,YAAY,CAACG,YAAY,CAACC,QAAd,CAAZ,CAFyB,CAGzB;;AACA,MAAMC,OAAO,GAAGN,UAAU,CAACI,YAAY,CAACC,QAAd,CAA1B,CAJyB,CAKzB;;AACAT,EAAAA,KAAK,CAACW,QAAN,CAAeL,cAAc,CAACI,OAAD,CAA7B,EANyB,CAQzB;;AACA,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAZ,IAAAA,KAAK,CAACW,QAAN,CAAeJ,UAAU,EAAzB,EAF6B,CAI7B;;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD;AACF;;IAGKC,G;;;;;;;;;;;;;6BACK;AAGP,aAEE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEnB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF;AAQD;;;;EAZeH,S;;AAiBlB,eAAesB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nimport { Provider, connect } from \"react-redux\";\nimport store from './store';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authActions';\n\n\n\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n\n    // Redirect to login\n    window.location.href = '/login';\n  }\n}\n\n\nclass App extends Component {\n  render() {\n\n\n    return (\n\n      <Provider store={store}>\n        <Router>\n           \n        </Router>\n      </Provider>\n    );\n  }\n}\n\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}